import imp
import argparse
import numpy as np
from optimizers import BatchGradientDescent

'''
parser = argparse.ArgumentParser(description="Parse a file using a stored model.")
args = parser.parse_args()
'''

algorithm = "distmult"
train_triplets = "data/FB15k/freebase_mtr100_mte100-train.txt"
valid_triplets = "data/FB15k/freebase_mtr100_mte100-valid.txt"
entities = "data/FB15k/entities.dict"
relations = "data/FB15k/relations.dict"
outfilepath = "test.txt"
model_path = "test.model"

io = imp.load_source('io', 'code/common/io.py')
algorithm = imp.load_source('algorithm', 'code/experts/'+algorithm+'/model.py')

train_triplets = io.read_triplets_as_list(train_triplets, entities, relations)
valid_triplets = io.read_triplets_as_list(valid_triplets, entities, relations)

entities = io.read_dictionary(entities)
relations = io.read_dictionary(relations)

model = algorithm.Model()
model.set_entity_count(len(entities))
model.set_relation_count(len(relations))
model.initialize_variables()
model.print_status()
BatchGradientDescent.train(model, train_triplets[:100], valid_triplets, model_path)
